on:
  pull_request:

  push:
    branches:
      - main

name: Run Pulumi

concurrency:
  # Make sure each push gets a separate concurrency group so pushes to main
  # don't cancel each other.
  group: >-
    pulumi-${{
      github.event_name == 'pull_request' &&
      github.ref ||
      github.sha
    }}
  cancel-in-progress: true

permissions: {}

jobs:
  # Actions only allows one waiter per concrrency group, so we do the waiting
  # ourselves.
  turnstile:
    name: Wait for any other builds of ${{ github.workflow }}
    runs-on: ubuntu-24.04

    if: github.event_name == 'push'

    steps:
      - name: Wait
        uses: softprops/turnstyle@807f6009e7cee5c2c9faa41ccef03a8bb24b06ab # v2.4.0
        with:
          continue-after-seconds: 600

  oidc_debug_test:
    name: Debug OIDC claims

    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout actions-oidc-debugger
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: github/actions-oidc-debugger
          ref: main
          path: ./.github/actions/actions-oidc-debugger
          persist-credentials: false

      - name: Debug OIDC Claims
        uses: ./.github/actions/actions-oidc-debugger
        with:
          audience: "${{ github.server_url }}/${{ github.repository_owner }}"

  pulumi:
    # For main builds, we use the concurrency group to ensure that only one
    # build is running at a time, so that we don't have to worry about
    # multiple builds trying to update the same stack at the same time.
    concurrency:
      group: pulumi-${{ github.ref_name }}
      cancel-in-progress:
        ${{ github.ref_name == 'refs/heads/main' && false || true }}

    name: >-
      Pulumi ${{ (github.event_name == 'push' && github.ref ==
      'refs/heads/main') && 'up' || 'preview' }}

    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: write

    runs-on: ubuntu-24.04

    env:
      AWS_REGION: eu-west-2
      ROLE: arn:aws:iam::588722779806:role/oidcRole-4fd43b4
      STATE_BUCKET: pulumi-state-588722779806

    steps:
      # Actions only allows one waiter per concrrency group, so we do the waiting
      # ourselves.
      - name: Wait
        if: github.event_name == 'push'
        uses: softprops/turnstyle@807f6009e7cee5c2c9faa41ccef03a8bb24b06ab # v2.4.0
        with:
          continue-after-seconds: 600

      - name: Install corepack
        env:
          # renovate: datasource=npm depName=corepack
          COREPACK_VERSION: 0.31.0
        run: |
          npm install -g corepack@${{ env.COREPACK_VERSION }}

      - name: Enable corepack
        run: |
          corepack enable

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          audience: lambda-rssfilter-core-prod
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ROLE }}

      - name: Print session info
        run: aws sts get-caller-identity

      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          package_json_file: pulumi/package.json

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache-dependency-path: "pulumi/pnpm-lock.yaml"
          node-version-file: "pulumi/package.json"
          cache: "pnpm"

      - name: Install dependencies
        working-directory: pulumi
        run: pnpm install

      - name: Get pulumi node package version
        id: pulumi-version
        working-directory: pulumi
        run: |
          pulumi_version="$(pnpm ls --json @pulumi/pulumi | jq --raw-output '.[0].dependencies["@pulumi/pulumi"].version')"
          echo "Pulumi version: ${pulumi_version}"

          echo "pulumi-version=${pulumi_version}" >> $GITHUB_OUTPUT

      - name: Run pulumi
        uses: pulumi/actions@cc7494be991dba0978f7ffafaf995b0449a0998e # v6.5.0
        env:
          PKG_CONFIG_SYSROOT_DIR: /usr/lib/aarch64-linux-gnu
        with:
          cloud-url:
            s3://${{ env.STATE_BUCKET }}?region=${{ env.AWS_REGION }}&awssdk=v2
          stack-name: organization/lambda-rssfilter/prod
          command: >-
            ${{
              (github.event_name == 'push' && github.ref == 'refs/heads/main')
              && 'up'
              || 'preview'
            }}
          comment-on-pr: true
          comment-on-summary: true
          pulumi-version: ${{ steps.pulumi-version.outputs.pulumi-version }}
          work-dir: pulumi
