name: Test Suite
on:
  push:
    branches:
      - main

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions: {}

jobs:
  build:
    strategy:
      matrix:
        config:
          - target: x86_64-unknown-linux-gnu
            runs-on: ubuntu-24.04
          - target: aarch64-unknown-linux-gnu
            runs-on: ubuntu-24.04-arm
          - target: wasm32-unknown-unknown
            runs-on: ubuntu-24.04-arm

    # Share build results via cache between the `build-rust.yml` and
    # `pulumi.yml` workflows, because they have the same concurrency group. The
    # later one will wait for the earlier.
    concurrency:
      group: build-${{ github.sha }}-${{ matrix.config.target }}
      cancel-in-progress: false

    name: Build, test, format
    runs-on: ${{ matrix.config.runs-on }}

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Build
        uses: ./.github/actions/build
        with:
          build-type:
            ${{ github.event_name == 'pull_request' && 'debug' || 'release' }}
          target: ${{ matrix.config.target }}

      - name: Run tests
        if: matrix.config.target != 'wasm32-unknown-unknown'
        run: cargo test --all-features

      - name: Run tests (wasm32-unknown-unknown)
        if: matrix.config.target == 'wasm32-unknown-unknown'
        run: |
          # We need to build the tests first, then run them.
          cargo test --all-features --target wasm32-unknown-unknown -- --nocapture

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@559aa3035a47390ba96088dffa783b5d26da9326 # v1.1.1

      - name: Run clippy
        shell: sh
        env:
          TARGET: ${{ matrix.config.target }}
        run: |
          cargo clippy --target "${TARGET}" --all-targets --all-features -- -D warnings
